{
  "name": "All",
  "on": [
    "push",
    "pull_request"
  ],
  "jobs": {
    "all": {
      "name": "Test and Build/Release",
      "strategy": {
        "matrix": {
          "include": [
            {
              "ident": "x64",
              "arch": "x86_64"
            },
            {
              "ident": "x32",
              "arch": "i686"
            },
            {
              "ident": "arm64",
              "arch": "aarch64"
            }
          ]
        }
      },
      "runs-on": "windows-latest",
      "steps": [
        {
          "name": "Setup | Checkout",
          "uses": "actions/checkout@v2"
        },
        {
          "name": "Setup | Rust",
          "uses": "actions-rs/toolchain@v1.0.7",
          "with": {
            "toolchain": "stable",
            "override": true,
            "profile": "minimal",
            "target": "${{ matrix.arc }}-pc-windows-msvc"
          }
        },
        {
          "name": "Test | ${{ matrix.ident }}",
          "uses": "actions-rs/cargo@v1.0.3",
          "with": {
            "command": "test",
            "args": "--target  ${{ matrix.arch }}-pc-windows-msvc"
          }
        },
        {
          "name": "Build | ${{ matrix.ident }}",
          "if": "github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')",
          "run": "cargo build --release --target ${{ matrix.arch }}-pc-windows-msvc"
        },
        {
          "name": "PostBuild | Prepare",
          "if": "github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')",
          "run": "cd target/${{ matrix.arch }}-pc-windows-msvc/release\n7z a ../../../wink-${{ matrix.ident }}.zip ln.exe rmlink.exe linfo.exe\ncd -"
        },
        {
          "name": "Deploy | Upload Artifacts",
          "if": "github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')",
          "uses": "actions/upload-artifact@v2",
          "with": {
            "name": "wink-${{ matrix.ident }}.zip",
            "path": "wink-${{ matrix.ident }}.zip"
          }
        }
      ]
    },
    "release": {
      "name": "Create GitHub Release",
      "needs": "all",
      "if": "github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')",
      "runs-on": "windows-latest",
      "steps": [
        {
          "name": "Setup | Checkout",
          "uses": "actions/checkout@v2.3.4",
          "with": {
            "fetch-depth": 0
          }
        },
        {
          "name": "Setup | go",
          "uses": "actions/setup-go@v2",
          "with": {
            "go-version": "^1.17.0"
          }
        },
        {
          "name": "Setup | Artifacts",
          "uses": "actions/download-artifact@v2"
        },
        {
          "name": "Setup | Release notes",
          "run": "GO111MODULE=on go install github.com/git-chglog/git-chglog/cmd/git-chglog@0.9.1\ngit-chglog -c .github/chglog/release.yml $(git describe --tags) > RELEASE.md\n"
        },
        {
          "name": "Deploy | Publish",
          "uses": "softprops/action-gh-release@v1",
          "with": {
            "files": "wink-*/wink-*",
            "body_path": "RELEASE.md"
          }
        }
      ]
    }
  }
}
